{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 6,
  "links": [
    {
      "asDropdown": false,
      "icon": "external link",
      "includeVars": false,
      "keepTime": false,
      "tags": [
        "scrap_monitoring"
      ],
      "targetBlank": false,
      "title": "Scrap Monitoring Dashboards",
      "tooltip": "",
      "type": "dashboards",
      "url": ""
    }
  ],
  "liveNow": false,
  "panels": [
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "color-text"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 20
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "part"
            },
            "properties": [
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "text",
                      "value": null
                    }
                  ]
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 16,
        "w": 9,
        "x": 0,
        "y": 0
      },
      "id": 2,
      "options": {
        "footer": {
          "countRows": false,
          "enablePagination": true,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "frameIndex": 1,
        "showHeader": true
      },
      "pluginVersion": "9.4.7",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb"
          },
          "query": "from(bucket: \"fault_capture\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"reported_defect\")\n  |> filter(fn: (r) => r[\"_field\"] == \"count\")\n  |> filter(fn: (r) => r[\"outcome\"] == \"${outcome}\")\n  |> keep(columns: [\"_value\",\"part\",\"operation\"])\n  |> group(columns: [\"part\",\"operation\"])\n  |> sum()\n  |> pivot(rowKey: [\"part\"], columnKey: [\"operation\"], valueColumn: \"_value\")\n  |> group()\n  \n  ",
          "refId": "A"
        }
      ],
      "title": "Total ${outcome}",
      "transformations": [],
      "type": "table"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": 3600000,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "area"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "transparent",
                "value": null
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 8,
        "x": 9,
        "y": 0
      },
      "id": 7,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb"
          },
          "query": "from(bucket: \"fault_capture\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"reported_defect\")\n  |> filter(fn: (r) => r[\"_field\"] == \"count\")\n  |> drop(columns:[\"reason\"])\n  |> group(columns: [\"operation\",\"outcome\"])\n  |> aggregateWindow(every: ${time_bucket}, fn: sum, createEmpty: true)\n  |> pivot(valueColumn: \"_value\", rowKey: [\"_time\"], columnKey: [\"outcome\"])\n  |> map(fn: (r) => ({ r with _value: if r.${outcome} > 0 then r.${outcome} else 0}))\n  |> keep(columns: [\"operation\",\"_time\",\"_value\"])\n  |> group(columns: [\"operation\"])",
          "refId": "A"
        }
      ],
      "title": "Total ${outcome} by operation",
      "transformations": [],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": 3600000,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "area"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "transparent",
                "value": null
              },
              {
                "color": "#EAB839",
                "value": 0.1
              },
              {
                "color": "red",
                "value": 0.15
              }
            ]
          },
          "unit": "percentunit"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 7,
        "x": 17,
        "y": 0
      },
      "id": 4,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb"
          },
          "query": "if \"${outcome}\" == \"scrap\" or \"${outcome}\" == \"rework\" then\nfrom(bucket: \"fault_capture\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"reported_defect\")\n  |> filter(fn: (r) => r[\"_field\"] == \"count\")\n  |> drop(columns:[\"reason\"])\n  |> group(columns: [\"operation\",\"outcome\"])\n  |> aggregateWindow(every: ${time_bucket}, fn: sum, createEmpty: true)\n  |> pivot(valueColumn: \"_value\", rowKey: [\"_time\"], columnKey: [\"outcome\"])\n  |> map(fn: (r) => ({ r with _value: if r.${outcome} > 0 then float(v:r.${outcome})/float(v:r.pass) else 0.0}))\n  |> keep(columns: [\"operation\",\"_time\",\"_value\"])\n  |> group(columns: [\"operation\"])\nelse\nfrom(bucket: \"fault_capture\")\n  |> range(start: -1m)\n  |> keep(columns: [])",
          "refId": "A"
        }
      ],
      "title": "Overall ${outcome} ratio by operation",
      "transformations": [],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": 3600000,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "area"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "transparent",
                "value": null
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 8,
        "x": 9,
        "y": 8
      },
      "id": 8,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb"
          },
          "query": "from(bucket: \"fault_capture\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"reported_defect\")\n  |> filter(fn: (r) => r[\"_field\"] == \"count\")\n  |> drop(columns:[\"reason\"])\n  |> group(columns: [\"part\",\"outcome\"])\n  |> aggregateWindow(every: ${time_bucket}, fn: sum, createEmpty: true)\n  |> pivot(valueColumn: \"_value\", rowKey: [\"_time\"], columnKey: [\"outcome\"])\n  |> map(fn: (r) => ({ r with _value: if r.${outcome} > 0 then r.${outcome} else 0}))\n  |> keep(columns: [\"part\",\"_time\",\"_value\"])\n  |> group(columns: [\"part\"])",
          "refId": "A"
        }
      ],
      "title": "Total ${outcome} by part",
      "transformations": [],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": 3600000,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "area"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "transparent",
                "value": null
              },
              {
                "color": "#EAB839",
                "value": 0.1
              },
              {
                "color": "red",
                "value": 0.15
              }
            ]
          },
          "unit": "percentunit"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 7,
        "x": 17,
        "y": 8
      },
      "id": 6,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb"
          },
          "query": "//avoid showing meaningless data when pass selected\nif \"${outcome}\" == \"scrap\" or \"${outcome}\" == \"rework\" then\nfrom(bucket: \"fault_capture\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"reported_defect\")\n  |> filter(fn: (r) => r[\"_field\"] == \"count\")\n  |> drop(columns:[\"reason\"])\n  |> group(columns: [\"part\",\"outcome\"])\n  |> aggregateWindow(every: ${time_bucket}, fn: sum, createEmpty: true)\n  |> pivot(valueColumn: \"_value\", rowKey: [\"_time\"], columnKey: [\"outcome\"])\n  |> map(fn: (r) => ({ r with _value: if r.${outcome} > 0 then float(v:r.${outcome})/float(v:r.pass) else 0.0}))\n  |> keep(columns: [\"part\",\"_time\",\"_value\"])\n  |> group(columns: [\"part\"])\nelse\nfrom(bucket: \"fault_capture\")\n  |> range(start: -1m)\n  |> keep(columns: [])",
          "refId": "A"
        }
      ],
      "title": "Overall ${outcome} ratio by part",
      "transformations": [],
      "type": "timeseries"
    }
  ],
  "refresh": "",
  "revision": 1,
  "schemaVersion": 38,
  "style": "dark",
  "tags": [
    "scrap_monitoring"
  ],
  "templating": {
    "list": [
      {
        "current": {
          "selected": true,
          "text": "Scrap",
          "value": "scrap"
        },
        "hide": 0,
        "includeAll": false,
        "label": "Outcome",
        "multi": false,
        "name": "outcome",
        "options": [
          {
            "selected": true,
            "text": "Scrap",
            "value": "scrap"
          },
          {
            "selected": false,
            "text": "Rework",
            "value": "rework"
          },
          {
            "selected": false,
            "text": "Good",
            "value": "pass"
          }
        ],
        "query": "Scrap : scrap, Rework : rework, Good : pass",
        "queryValue": "",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "current": {
          "selected": true,
          "text": "1d",
          "value": "1d"
        },
        "hide": 0,
        "includeAll": false,
        "label": "Time Bucket",
        "multi": false,
        "name": "time_bucket",
        "options": [
          {
            "selected": true,
            "text": "1d",
            "value": "1d"
          },
          {
            "selected": false,
            "text": "2d",
            "value": "2d"
          },
          {
            "selected": false,
            "text": "1w",
            "value": "1w"
          },
          {
            "selected": false,
            "text": "4w",
            "value": "4w"
          }
        ],
        "query": "1d, 2d, 1w, 4w",
        "queryValue": "",
        "skipUrlSync": false,
        "type": "custom"
      }
    ]
  },
  "time": {
    "from": "now-7d",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "Overview",
  "uid": "YMtDdAX4k",
  "version": 2,
  "weekStart": ""
}
